# effect size
d_est <- round(cohens_d$estimate[[1]], 2)
d_ci_lower <- round(cohens_d$conf.int[["inf"]], 2)
d_ci_upper <- round(cohens_d$conf.int[["sup"]], 2)
d_interpretation <- cohens_d$magnitude[[1]]
# NHST
if (t_test_p<=0.05) {
significance <- paste("An independent t test demonstrated significant differences of ", d_interpretation, " effect size between ", sep = "")
} else {
significance <- "An independent t test demonstrated no significant differences between "
}
# descriptive stats
mean_condition_a <- round(descriptives[[1]][["mean"]][[2]], 2)
mean_condition_b <- round(descriptives[[2]][["mean"]][[2]], 2)
sd_condition_a <- round(descriptives[[1]][["sd"]][[2]], 2)
sd_condition_b <- round(descriptives[[2]][["sd"]][[2]], 2)
n_condition_a <- round(descriptives[[1]][["n"]][[2]], 2)
n_condition_b <- round(descriptives[[2]][["n"]][[2]], 2)
########################################################################
## report stats
# t test and d
t_test_and_d_output <- paste(", t(", t_test_df, ") = ", t_test_est, ", p = ", t_test_p, ", d = ", d_est, ", 95% CI [", d_ci_lower, ", ", d_ci_upper, "]. ", sep = "")
# descriptive stats
descriptives_condition_a_output <- paste("condition A (n = ", n_condition_a, ", M = ", mean_condition_a, ", SD = ", sd_condition_a, ")", sep = "")
descriptives_condition_b_output <- paste("condition B (n = ", n_condition_b, ", M = ", mean_condition_b, ", SD = ", sd_condition_b, ")", sep = "")
#t_test_and_d_output
# returns "t(96.77) = -3.07, p = 0.0028, d = -0.61, 95% CI [-1.03, -0.2]"
#descriptives_condition_a_output
# returns "condition A (n = 52, M = 0.11, SD = 0.33)"
#descriptives_condition_b_output
# returns "condition B (n = 48, M = -0.1, SD = 0.35)"
## final summary
t_test_output_and_interpretation <- paste(significance, descriptives_condition_a_output, " and ", descriptives_condition_b_output, t_test_and_d_output, sep = "")
#t_test_output_and_interpretation
## write to disk
sink("output t test independent.txt")
cat(t_test_output_and_interpretation)  # cat() supresses the line number from being printed
sink()
########################################################################
# Automated mixed within-between anova and ηg2 reporting, for use in knittr scripts
# Ian Hussey
# all results checked against those returned by JASP
# usage:
# 1. customise the working directory line, containing setwd() below
# 2. run script
# to do:
# rounding of F and p values needs to be more adaptive, e.g., including < values.
# confidence intervals needed for ηg2. However, I'm not aware of a package that does this.
########################################################################
# Clean workspace
rm(list=ls())
########################################################################
# dependencies
library(lsr)  # for eta2
library(MBESS)  # for 95% CI on eta2
library(dplyr)
library(tidyr)
library(ez)
library(psych)  # for describeBy()
########################################################################
# data acquisition
setwd("~/Dropbox/Work/Programming/R/4 Reporting/R markdown & knitr/automatic reporting of tests/")
data_df <- read.csv("dataset.csv")
########################################################################
# reshape data for analysis
reshaped_df <-
data_df %>%
gather(timepoint, outcome_variable, c(timepoint_1, timepoint_2))
#convert participant code to factor
reshaped_df$participant <- factor(reshaped_df$participant)
#check
sapply(reshaped_df, class)
# 2X2 mixed within-between anova
# outcome_variable as DV, condition as between subjects IV and timepoint_1 as within subjects IV
# ezANOVA makes it easier to specify the model than aov() and easier to access the returned list.
anova <- ezANOVA(data = reshaped_df,
dv = outcome_variable,
within = timepoint,
between = condition,
wid = participant,
type = 3)
# descriptive stats by cell
descriptives <-
reshaped_df %>%
select(condition, timepoint, outcome_variable) %>%
describeBy(list(reshaped_df$condition, reshaped_df$timepoint),  # do seperate stats for these cells
fast=TRUE,  # subset of descriptive stats
ranges = FALSE,
trim=0)
#descriptives
########################################################################
## extract individual stats
# anova results
# nb generalised eta squared is returned here because it has equivalent interpretations
# and is unaffected by the factorial design, whereas eta2 and partial eta2 are.
# See Olejnik & Algina (2003), Bakeman (2005), and Lakens (2013).
anova_main_effect_condition_df1   <-  round(anova$ANOVA$DFn[1], 2)
anova_main_effect_condition_df2   <-  round(anova$ANOVA$DFd[1], 2)
anova_main_effect_condition_F     <-  round(anova$ANOVA$F[1], 2)
anova_main_effect_condition_p     <-  round(anova$ANOVA$p[1], 5)
anova_main_effect_condition_geta2 <-  round(anova$ANOVA$ges[1], 2)
anova_main_effect_timepoint_df1   <-  round(anova$ANOVA$DFn[2], 2)
anova_main_effect_timepoint_df2   <-  round(anova$ANOVA$DFd[2], 2)
anova_main_effect_timepoint_F     <-  round(anova$ANOVA$F[2], 2)
anova_main_effect_timepoint_p     <-  round(anova$ANOVA$p[2], 5)
anova_main_effect_timepoint_geta2 <-  round(anova$ANOVA$ges[2], 2)
anova_interaction_effect_df1      <-  round(anova$ANOVA$DFn[3], 2)
anova_interaction_effect_df2      <-  round(anova$ANOVA$DFd[3], 2)
anova_interaction_effect_F        <-  round(anova$ANOVA$F[3], 2)
anova_interaction_effect_p        <-  round(anova$ANOVA$p[3], 5)
anova_interaction_effect_geta2    <-  round(anova$ANOVA$ges[3], 2)
# NHST
# condition main effect
if (anova_main_effect_condition_p < 0.05) {
condition_significance <- "A significant main effect was found for condition, "
} else {
condition_significance <- "No main effect was found for condition, "
}
# timepoint main effect
if (anova_main_effect_timepoint_p < 0.05) {
timepoint_significance <- "A significant main effect was found for time point, "
} else {
timepoint_significance <- "No main effect was found for time point, "
}
# timepoint main effect
if (anova_interaction_effect_p < 0.05) {
interaction_significance <- "A significant condition*time point interaction effect was found, "
} else {
interaction_significance <- "No condition*time point interaction effect was found, "
}
# descriptive stats
mean_condition_a_timepoint_1  <- round(descriptives[[1]][["mean"]][[3]], 2)
mean_condition_b_timepoint_1  <- round(descriptives[[2]][["mean"]][[3]], 2)
mean_condition_a_timepoint_2  <- round(descriptives[[3]][["mean"]][[3]], 2)
mean_condition_b_timepoint_2  <- round(descriptives[[4]][["mean"]][[3]], 2)
sd_condition_a_timepoint_1    <- round(descriptives[[1]][["sd"]][[3]], 2)
sd_condition_b_timepoint_1    <- round(descriptives[[2]][["sd"]][[3]], 2)
sd_condition_a_timepoint_2    <- round(descriptives[[3]][["sd"]][[3]], 2)
sd_condition_b_timepoint_2    <- round(descriptives[[4]][["sd"]][[3]], 2)
n_condition_a_timepoint_1     <- round(descriptives[[1]][["n"]][[3]], 2)
n_condition_b_timepoint_1     <- round(descriptives[[2]][["n"]][[3]], 2)
n_condition_a_timepoint_2     <- round(descriptives[[3]][["n"]][[3]], 2)
n_condition_b_timepoint_2     <- round(descriptives[[4]][["n"]][[3]], 2)
########################################################################
## report stats
anova_setup <- "A mixed within-between ANOVA was conducted with the outcome variable as DV, condition as the between subjects IV, and time point as the within subjects IV. "
# anova output
anova_main_effect_condition_output    <- paste("F(", anova_main_effect_condition_df1, ", ", anova_main_effect_condition_df2, ") = ", anova_main_effect_condition_F, ", p = ", anova_main_effect_condition_p, ", ηg2 = ", anova_main_effect_condition_geta2, ". ", sep = "")
anova_main_effect_timepoint_output    <- paste("F(", anova_main_effect_timepoint_df1,", ", anova_main_effect_timepoint_df2,") = ", anova_main_effect_timepoint_F, ", p = ", anova_main_effect_timepoint_p, ", ηg2 = ", anova_main_effect_timepoint_geta2, ". ", sep = "")
anova_interaction_effect_output       <- paste("F(", anova_interaction_effect_df1, ", ", anova_interaction_effect_df2, ") = ", anova_interaction_effect_F, ", p = ", anova_interaction_effect_p, ", ηg2 = ", anova_interaction_effect_geta2, ". ", sep = "")
#anova_main_effect_condition_output  # returns "main effect for condition: F(1, 98) = 0, p = 0.99496, ηg2 = 0"
#anova_main_effect_timepoint_output  # returns "main effect for time point: F(1, 98) = 0, p = 0.98558, ηg2 = 0"
#anova_interaction_effect_output     # returns "interaction effect: F(1, 98) = 9.43, p = 0.00276, ηg2 = 0.04"
# descriptive stats output
desc_condition_A_timepoint_1          <- paste("condition A timepoint 1: n = ", n_condition_a_timepoint_1, ", M = ", mean_condition_a_timepoint_1, ", SD = ", sd_condition_a_timepoint_1, sep = "")
desc_condition_B_timepoint_1          <- paste("condition B timepoint 1: n = ", n_condition_b_timepoint_1, ", M = ", mean_condition_b_timepoint_1, ", SD = ", sd_condition_b_timepoint_1, sep = "")
desc_condition_A_timepoint_2          <- paste("condition A timepoint 2: n = ", n_condition_a_timepoint_2, ", M = ", mean_condition_a_timepoint_2, ", SD = ", sd_condition_a_timepoint_2, sep = "")
desc_condition_B_timepoint_2          <- paste("condition B timepoint 2: n = ", n_condition_b_timepoint_2, ", M = ", mean_condition_b_timepoint_2, ", SD = ", sd_condition_b_timepoint_2, sep = "")
#desc_condition_A_timepoint_1  # returns "condition A timepoint 1: n = 52, M = -0.13, SD = 0.26"
#desc_condition_B_timepoint_1  # returns "condition B timepoint 1: n = 48, M = -0.02, SD = 0.32"
#desc_condition_A_timepoint_2  # returns "condition A timepoint 2: n = 52, M = -0.02, SD = 0.23"
#desc_condition_B_timepoint_2  # returns "condition B timepoint 2: n = 48, M = -0.13, SD = 0.26"
## final summary
anova_output_and_interpretation     <- paste(anova_setup, condition_significance, anova_main_effect_condition_output, timepoint_significance, anova_main_effect_timepoint_output, interaction_significance, anova_interaction_effect_output, sep = "")
#anova_output_and_interpretation
## write to disk
sink("output ANOVA mixed within-between.txt")
cat(anova_output_and_interpretation)  # cat() supresses the line number from being printed
cat("\n")
cat("\n")
cat(desc_condition_A_timepoint_1)
cat("\n")
cat(desc_condition_B_timepoint_1)
cat("\n")
cat(desc_condition_A_timepoint_2)
cat("\n")
cat(desc_condition_B_timepoint_2)
sink()
rm(list=ls())
########################################################################
# dependencies
library(lsr)  # for eta2
library(MBESS)  # for 95% CI on eta2
library(dplyr)
library(tidyr)
library(ez)
library(psych)  # for describeBy()
########################################################################
# data acquisition
setwd("~/Dropbox/Work/Programming/R/4 Reporting/R markdown & knitr/automatic reporting of tests/")
data_df <- read.csv("dataset.csv")
########################################################################
setwd("~/git/Automated Reporting/")
########################################################################
# Automated 2 way ancova and η2 reporting, for use in knittr scripts
# Ian Hussey
# checked against results returned by JASP
# usage:
# 1. customise the working directory line, containing setwd() below
# 2. run script
# to do:
# rounding of F and p values needs to be more adaptive, e.g., including < values.
# ezANOVA() would be an alternative regression method with nicer output
########################################################################
# Clean workspace
rm(list=ls())
########################################################################
# dependencies
library(lsr)  # for eta2
library(MBESS)  # for 95% CI on eta2
library(dplyr)
library(effects)  # for effect(), for adjusted means
library(psych)  # for describeBy()
########################################################################
# data acquisition
setwd("~/git/Automated Reporting/")
data_df <- read.csv("dataset.csv")
########################################################################
# ancova with timepoint_2 as DV, condition as IV, and timepoint_1 as covariate
model1 <- lm(formula = timepoint_2 ~ timepoint_1 + condition,
data = data_df)  # NB if anova() had been used below there would be ordering effects for the model: must specify as DV ~ covariate + IV
ancova <- etaSquared(model1,
type = 3,
anova = TRUE)  # output full anova results, not just eta2
# descriptive stats by cell
# n
n_per_condition <-
data_df %>%
select(condition) %>%
describeBy(data_df$condition,
fast=TRUE,  # subset of descriptive stats
ranges = FALSE,
trim=0)
n_condition_a <- round(n_per_condition[[1]][["n"]][[1]], 2)
n_condition_b <- round(n_per_condition[[2]][["n"]][[1]], 2)
# adjusted means & sds
adjusted_means <- effect("condition", model1)
data.frame(adjusted_means)  # includes means and se, but not sd. this is converted below.
########################################################################
## extract individual stats
# ancova
# NB this returns the main effect only, not the covariate effect
# all the below assume that the model has been specified as "DV ~ covariate + IV" in order to return the appropriate rows
ancova_F    <-  round(ancova[2,"F"], 2)         # where 2 specifies the main effect row
ancova_df_1 <-  round(ancova[2,"df"], 2)        # where 2 specifies the main effect row
ancova_df_2 <-  round(ancova[3,"df"], 2)        # where 3 specifies the residuals row
ancova_p    <-  round(ancova[2,"p"], 5)         # where 2 specifies the main effect row
ancova_eta2 <-  round(ancova[2,"eta.sq"], 2)    # where 2 specifies the main effect row
# 90% CI on eta2 (nb 90% not 95%, see Wuensch, 2009; Steiger. 2004)
# from http://daniellakens.blogspot.be/2014/06/calculating-confidence-intervals-for.html
# generically: ci.pvaf(F.value=XX, df.1=XX, df.2=XX, N=XX, conf.level=.90)
# 1. find n
n_df <- summarize(data_df, n_variable = n())
n_integer <- n_df$n_variable
# 2. 90% CIs
ancova_eta2_ci_lower <- round(ci.pvaf(F.value=ancova_F, df.1=ancova_df_1, df.2=ancova_df_2, N=n_integer, conf.level=.90)$Lower.Limit.Proportion.of.Variance.Accounted.for, 2)
ancova_eta2_ci_upper <- round(ci.pvaf(F.value=ancova_F, df.1=ancova_df_1, df.2=ancova_df_2, N=n_integer, conf.level=.90)$Upper.Limit.Proportion.of.Variance.Accounted.for, 2)
# NHST
if (ancova_p < 0.05) {
significance    <- "A main effect for condition was found: after controlling for time point 1 scores, scores at time point 2 were significantly different between "
} else {
significance    <- "No main effect for condition was found: after controlling for time point 1 scores, no significant differences were found between "
}
# descriptive stats
adjusted_mean_condition_a   <- round(data.frame(adjusted_means)[["fit"]][[1]], 2)
adjusted_mean_condition_b   <- round(data.frame(adjusted_means)[["fit"]][[2]], 2)
# NB: sd = se * sqrt(n)
adjusted_sd_condition_a     <- round(data.frame(adjusted_means)[["se"]][[1]] * sqrt(n_condition_a), 2)
adjusted_sd_condition_b     <- round(data.frame(adjusted_means)[["se"]][[2]] * sqrt(n_condition_b), 2)
########################################################################
## report stats
acnova_setup <- "An ANCOVA was conducted with time point 2 as the DV, condition as the IV, and time point 1 as a covariate. "
ancova_output <- paste(", F(", ancova_df_1, ", ", ancova_df_2, ") = ", ancova_F, ", p = ", ancova_p, ", η2 = ", ancova_eta2, ", 90% CI [", ancova_eta2_ci_lower, ", ", ancova_eta2_ci_upper, "]. ", sep = "")
#ancova_output # returns "F(1, 97) = 6.18, p = 0.01461, η2 = 0.06, 90% CI [0.01, 0.15]"
# descriptive stats output
desc_condition_A  <- paste("condition A (n = ", n_condition_a, ", adjusted M = ", adjusted_mean_condition_a, ", SD = ", adjusted_sd_condition_a, ")", sep = "")
desc_condition_B  <- paste("condition B (n = ", n_condition_b, ", adjusted M = ", adjusted_mean_condition_b, ", SD = ", adjusted_sd_condition_b, ")", sep = "")
#desc_condition_A  # returns "condition A (n = 52, adjusted M = -0.01, SD = 0.25)"
#desc_condition_B  # returns "condition B (n = 48, adjusted M = -0.13, SD = 0.25)"
## final summary
ancova_output_and_interpretation <- paste(acnova_setup, significance, desc_condition_A, " and ", desc_condition_B, ancova_output, sep = "")
#ancova_output_and_interpretation
## write to disk
sink("output ANCOVA.txt")
cat(ancova_output_and_interpretation)  # cat() supresses the line number from being printed
sink()
########################################################################
# Automated reporting of an independent t test and cohen's d
# for use in knittr scripts
# Ian Hussey
# checked against results returned by JASP
# usage:
# 1. customise the working directory line, containing setwd() below
# 2. run script
# to do:
# report if one sided ttest
# rounding of p values needs to be more adaptive, e.g., including < values.
########################################################################
# Clean workspace
rm(list=ls())
########################################################################
# dependencies
library(effsize)
library(psych)  # for describeBy()
########################################################################
# data acquisition
setwd("~/git/Automated Reporting/")
data_df <- read.csv("dataset.csv")
########################################################################
## tests
# t test
t_test <- t.test(formula = change_score ~ condition,  # IV ~ DV adjusted here
data = data_df,
alternative = "two.sided",
paired = FALSE)
# effect size
cohens_d <- cohen.d(change_score ~ condition,
data = data_df)
# descriptive stats by cell
descriptives <-
data_df %>%
select(condition, change_score) %>%
describeBy(data_df$condition,  # do seperate stats for these cells
fast=TRUE,  # subset of descriptive stats
ranges = FALSE,
trim=0)
#descriptives
########################################################################
## extract individual stats
# t test
t_test_est <- round(t_test$statistic[[1]], 2)
t_test_df <- round(t_test$parameter[[1]], 2)
t_test_p <- round(t_test$p.value[[1]], 5)
#t_test$alternative[[1]]  # direction
# effect size
d_est <- round(cohens_d$estimate[[1]], 2)
d_ci_lower <- round(cohens_d$conf.int[["inf"]], 2)
d_ci_upper <- round(cohens_d$conf.int[["sup"]], 2)
d_interpretation <- cohens_d$magnitude[[1]]
# NHST
if (t_test_p<=0.05) {
significance <- paste("An independent t test demonstrated significant differences of ", d_interpretation, " effect size between ", sep = "")
} else {
significance <- "An independent t test demonstrated no significant differences between "
}
# descriptive stats
mean_condition_a <- round(descriptives[[1]][["mean"]][[2]], 2)
mean_condition_b <- round(descriptives[[2]][["mean"]][[2]], 2)
sd_condition_a <- round(descriptives[[1]][["sd"]][[2]], 2)
sd_condition_b <- round(descriptives[[2]][["sd"]][[2]], 2)
n_condition_a <- round(descriptives[[1]][["n"]][[2]], 2)
n_condition_b <- round(descriptives[[2]][["n"]][[2]], 2)
########################################################################
## report stats
# t test and d
t_test_and_d_output <- paste(", t(", t_test_df, ") = ", t_test_est, ", p = ", t_test_p, ", d = ", d_est, ", 95% CI [", d_ci_lower, ", ", d_ci_upper, "]. ", sep = "")
# descriptive stats
descriptives_condition_a_output <- paste("condition A (n = ", n_condition_a, ", M = ", mean_condition_a, ", SD = ", sd_condition_a, ")", sep = "")
descriptives_condition_b_output <- paste("condition B (n = ", n_condition_b, ", M = ", mean_condition_b, ", SD = ", sd_condition_b, ")", sep = "")
#t_test_and_d_output
# returns "t(96.77) = -3.07, p = 0.0028, d = -0.61, 95% CI [-1.03, -0.2]"
#descriptives_condition_a_output
# returns "condition A (n = 52, M = 0.11, SD = 0.33)"
#descriptives_condition_b_output
# returns "condition B (n = 48, M = -0.1, SD = 0.35)"
## final summary
t_test_output_and_interpretation <- paste(significance, descriptives_condition_a_output, " and ", descriptives_condition_b_output, t_test_and_d_output, sep = "")
#t_test_output_and_interpretation
## write to disk
sink("output t test independent.txt")
cat(t_test_output_and_interpretation)  # cat() supresses the line number from being printed
sink()
########################################################################
# Automated mixed within-between anova and ηg2 reporting, for use in knittr scripts
# Ian Hussey
# all results checked against those returned by JASP
# usage:
# 1. customise the working directory line, containing setwd() below
# 2. run script
# to do:
# rounding of F and p values needs to be more adaptive, e.g., including < values.
# confidence intervals needed for ηg2. However, I'm not aware of a package that does this.
########################################################################
# Clean workspace
rm(list=ls())
########################################################################
# dependencies
library(lsr)  # for eta2
library(MBESS)  # for 95% CI on eta2
library(dplyr)
library(tidyr)
library(ez)
library(psych)  # for describeBy()
########################################################################
# data acquisition
setwd("~/git/Automated Reporting/")
data_df <- read.csv("dataset.csv")
########################################################################
# reshape data for analysis
reshaped_df <-
data_df %>%
gather(timepoint, outcome_variable, c(timepoint_1, timepoint_2))
#convert participant code to factor
reshaped_df$participant <- factor(reshaped_df$participant)
#check
sapply(reshaped_df, class)
# 2X2 mixed within-between anova
# outcome_variable as DV, condition as between subjects IV and timepoint_1 as within subjects IV
# ezANOVA makes it easier to specify the model than aov() and easier to access the returned list.
anova <- ezANOVA(data = reshaped_df,
dv = outcome_variable,
within = timepoint,
between = condition,
wid = participant,
type = 3)
# descriptive stats by cell
descriptives <-
reshaped_df %>%
select(condition, timepoint, outcome_variable) %>%
describeBy(list(reshaped_df$condition, reshaped_df$timepoint),  # do seperate stats for these cells
fast=TRUE,  # subset of descriptive stats
ranges = FALSE,
trim=0)
#descriptives
########################################################################
## extract individual stats
# anova results
# nb generalised eta squared is returned here because it has equivalent interpretations
# and is unaffected by the factorial design, whereas eta2 and partial eta2 are.
# See Olejnik & Algina (2003), Bakeman (2005), and Lakens (2013).
anova_main_effect_condition_df1   <-  round(anova$ANOVA$DFn[1], 2)
anova_main_effect_condition_df2   <-  round(anova$ANOVA$DFd[1], 2)
anova_main_effect_condition_F     <-  round(anova$ANOVA$F[1], 2)
anova_main_effect_condition_p     <-  round(anova$ANOVA$p[1], 5)
anova_main_effect_condition_geta2 <-  round(anova$ANOVA$ges[1], 2)
anova_main_effect_timepoint_df1   <-  round(anova$ANOVA$DFn[2], 2)
anova_main_effect_timepoint_df2   <-  round(anova$ANOVA$DFd[2], 2)
anova_main_effect_timepoint_F     <-  round(anova$ANOVA$F[2], 2)
anova_main_effect_timepoint_p     <-  round(anova$ANOVA$p[2], 5)
anova_main_effect_timepoint_geta2 <-  round(anova$ANOVA$ges[2], 2)
anova_interaction_effect_df1      <-  round(anova$ANOVA$DFn[3], 2)
anova_interaction_effect_df2      <-  round(anova$ANOVA$DFd[3], 2)
anova_interaction_effect_F        <-  round(anova$ANOVA$F[3], 2)
anova_interaction_effect_p        <-  round(anova$ANOVA$p[3], 5)
anova_interaction_effect_geta2    <-  round(anova$ANOVA$ges[3], 2)
# NHST
# condition main effect
if (anova_main_effect_condition_p < 0.05) {
condition_significance <- "A significant main effect was found for condition, "
} else {
condition_significance <- "No main effect was found for condition, "
}
# timepoint main effect
if (anova_main_effect_timepoint_p < 0.05) {
timepoint_significance <- "A significant main effect was found for time point, "
} else {
timepoint_significance <- "No main effect was found for time point, "
}
# timepoint main effect
if (anova_interaction_effect_p < 0.05) {
interaction_significance <- "A significant condition*time point interaction effect was found, "
} else {
interaction_significance <- "No condition*time point interaction effect was found, "
}
# descriptive stats
mean_condition_a_timepoint_1  <- round(descriptives[[1]][["mean"]][[3]], 2)
mean_condition_b_timepoint_1  <- round(descriptives[[2]][["mean"]][[3]], 2)
mean_condition_a_timepoint_2  <- round(descriptives[[3]][["mean"]][[3]], 2)
mean_condition_b_timepoint_2  <- round(descriptives[[4]][["mean"]][[3]], 2)
sd_condition_a_timepoint_1    <- round(descriptives[[1]][["sd"]][[3]], 2)
sd_condition_b_timepoint_1    <- round(descriptives[[2]][["sd"]][[3]], 2)
sd_condition_a_timepoint_2    <- round(descriptives[[3]][["sd"]][[3]], 2)
sd_condition_b_timepoint_2    <- round(descriptives[[4]][["sd"]][[3]], 2)
n_condition_a_timepoint_1     <- round(descriptives[[1]][["n"]][[3]], 2)
n_condition_b_timepoint_1     <- round(descriptives[[2]][["n"]][[3]], 2)
n_condition_a_timepoint_2     <- round(descriptives[[3]][["n"]][[3]], 2)
n_condition_b_timepoint_2     <- round(descriptives[[4]][["n"]][[3]], 2)
########################################################################
## report stats
anova_setup <- "A mixed within-between ANOVA was conducted with the outcome variable as DV, condition as the between subjects IV, and time point as the within subjects IV. "
# anova output
anova_main_effect_condition_output    <- paste("F(", anova_main_effect_condition_df1, ", ", anova_main_effect_condition_df2, ") = ", anova_main_effect_condition_F, ", p = ", anova_main_effect_condition_p, ", ηg2 = ", anova_main_effect_condition_geta2, ". ", sep = "")
anova_main_effect_timepoint_output    <- paste("F(", anova_main_effect_timepoint_df1,", ", anova_main_effect_timepoint_df2,") = ", anova_main_effect_timepoint_F, ", p = ", anova_main_effect_timepoint_p, ", ηg2 = ", anova_main_effect_timepoint_geta2, ". ", sep = "")
anova_interaction_effect_output       <- paste("F(", anova_interaction_effect_df1, ", ", anova_interaction_effect_df2, ") = ", anova_interaction_effect_F, ", p = ", anova_interaction_effect_p, ", ηg2 = ", anova_interaction_effect_geta2, ". ", sep = "")
#anova_main_effect_condition_output  # returns "main effect for condition: F(1, 98) = 0, p = 0.99496, ηg2 = 0"
#anova_main_effect_timepoint_output  # returns "main effect for time point: F(1, 98) = 0, p = 0.98558, ηg2 = 0"
#anova_interaction_effect_output     # returns "interaction effect: F(1, 98) = 9.43, p = 0.00276, ηg2 = 0.04"
# descriptive stats output
desc_condition_A_timepoint_1          <- paste("condition A timepoint 1: n = ", n_condition_a_timepoint_1, ", M = ", mean_condition_a_timepoint_1, ", SD = ", sd_condition_a_timepoint_1, sep = "")
desc_condition_B_timepoint_1          <- paste("condition B timepoint 1: n = ", n_condition_b_timepoint_1, ", M = ", mean_condition_b_timepoint_1, ", SD = ", sd_condition_b_timepoint_1, sep = "")
desc_condition_A_timepoint_2          <- paste("condition A timepoint 2: n = ", n_condition_a_timepoint_2, ", M = ", mean_condition_a_timepoint_2, ", SD = ", sd_condition_a_timepoint_2, sep = "")
desc_condition_B_timepoint_2          <- paste("condition B timepoint 2: n = ", n_condition_b_timepoint_2, ", M = ", mean_condition_b_timepoint_2, ", SD = ", sd_condition_b_timepoint_2, sep = "")
#desc_condition_A_timepoint_1  # returns "condition A timepoint 1: n = 52, M = -0.13, SD = 0.26"
#desc_condition_B_timepoint_1  # returns "condition B timepoint 1: n = 48, M = -0.02, SD = 0.32"
#desc_condition_A_timepoint_2  # returns "condition A timepoint 2: n = 52, M = -0.02, SD = 0.23"
#desc_condition_B_timepoint_2  # returns "condition B timepoint 2: n = 48, M = -0.13, SD = 0.26"
## final summary
anova_output_and_interpretation     <- paste(anova_setup, condition_significance, anova_main_effect_condition_output, timepoint_significance, anova_main_effect_timepoint_output, interaction_significance, anova_interaction_effect_output, sep = "")
#anova_output_and_interpretation
## write to disk
sink("output ANOVA mixed within-between.txt")
cat(anova_output_and_interpretation)  # cat() supresses the line number from being printed
cat("\n")
cat("\n")
cat(desc_condition_A_timepoint_1)
cat("\n")
cat(desc_condition_B_timepoint_1)
cat("\n")
cat(desc_condition_A_timepoint_2)
cat("\n")
cat(desc_condition_B_timepoint_2)
sink()
